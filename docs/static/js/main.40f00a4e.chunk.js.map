{"version":3,"sources":["hooks/useForm.js","types/types.js","firebase/firebase-config.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","helpers/animation.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/journal/LoadingScreen.js","routers/AppRouter.js","reducers/uiReducer.js","reducers/notesReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","newFormState","types","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","setError","error","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","login","displayName","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","catch","e","console","log","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValue","trim","length","validator","isEmail","clase","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","active","emptyNotes","newNote","Date","getTime","add","NothingSelected","NotesAppBar","display","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","delete","startDeleting","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","LoadingScreen","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.40f00a4e.chunk.js","sourcesContent":["import { useState } from \"react\"\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n    const reset = (newFormState = initialState ) => {\n        setValues( newFormState );\n    }\n\n\n\n    return [ values, handleInputChange, reset ];\n\n}\n","export const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n    \r\n    // UI\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Upadate note',\r\n    notesFileUrl: '[Notes] Upadate image',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n\r\n\r\n\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAMNzqLqWmXonTF3Ya34jFzibBScDhrtls\",\r\n    authDomain: \"react-journal-13781.firebaseapp.com\",\r\n    projectId: \"react-journal-13781\",\r\n    storageBucket: \"react-journal-13781.appspot.com\",\r\n    messagingSenderId: \"857911536643\",\r\n    appId: \"1:857911536643:web:7f4510d581702132c2f236\"\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( error ) => ({\r\n    type: types.uiSetError,\r\n    payload: error\r\n})\r\n\r\n\r\nexport const removeError = (  ) => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n\r\n})\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { db } from '../firebase/firebase-config';\r\n\r\n\r\n\r\nexport const loadNotes= async ( uid ) => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapChild => {\r\n        notes.push ({\r\n            id: snapChild.id,\r\n            ...snapChild.data(),\r\n        })\r\n    });\r\n\r\n    return notes;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","export const  fileUpload = async ( file )=> {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/alejo-jpe/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset', 'react-journal')\r\n    formData.append('file', file)\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        } );\r\n\r\n        if(resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n\r\n\r\n\r\n\r\n}","import Swal from 'sweetalert2'\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes'\r\nimport { fileUpload } from '../helpers/fileUpload';\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        \r\n        const doc = await db.collection( `${uid}/journal/notes`).add( newNote) \r\n\r\n        dispatch( activeNote( doc.id, newNote) );\r\n        dispatch( addNewNote( doc.id, newNote) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({ \r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch(setNotes(notes));\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes \r\n});\r\n\r\n\r\nexport const startSaveNote = ( note )=> {\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {uid} = getState().auth\r\n\r\n        if ( !note.url ){\r\n        \r\n            delete note.url;\r\n        }\r\n\r\n        \r\n        const noteToFirestore =  { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote(note.id, noteToFirestore) );\r\n        Swal.fire('saved', note.title, 'success')\r\n        \r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload(file)\r\n\r\n        activeNote.url= fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote(id) );\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id,\r\n})\r\n\r\nexport const emptyNotes = (notes, active) => ({\r\n    type: types.notesLogoutCleaning,\r\n    payload: {\r\n        active,\r\n        notes\r\n    }\r\n})","import { types } from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { startLoading, finishLoading } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\nimport { emptyNotes } from './notes'\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName    \r\n    }\r\n});\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return(dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n        .then( ({user})  => {\r\n            dispatch( login(user.uid, user.displayName))\r\n            dispatch(finishLoading());\r\n            \r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n            dispatch(finishLoading());\r\n            Swal.fire('Error', e.message, 'error')\r\n\r\n        })\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name)=>{\r\n    return( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async ({user}) => {\r\n                \r\n                await user.updateProfile({displayName: name})\r\n                \r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n                Swal.fire('Error', e.message, 'error')\r\n\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin=() => {\r\n    return(dispatch) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        \r\n        .then( ({user}) => {\r\n            dispatch(\r\n                login(user.uid, user.displayName)\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch, getState) => {\r\n        await firebase.auth().signOut();\r\n        \r\n        // const {notes} = getState()\r\n        // const {active, notes: note} = notes\r\n        dispatch( logout() )\r\n        dispatch( emptyNotes() )\r\n    }\r\n}\r\n\r\nexport const logout = () =>({\r\n    type: types.logout\r\n})\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLoginEmailPassword, startGoogleLogin } from '../../actions/auth'\r\nimport { animation } from '../../helpers/animation'\r\n\r\nexport const LoginScreen = () => {\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const {loading} = useSelector(state => state.ui)\r\n\r\n\r\n    const[formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const {email, password} = formValues;\r\n\r\n        const handleLogin = (e) => {\r\n            e.preventDefault();\r\n            dispatch(startLoginEmailPassword (email, password))\r\n        }\r\n\r\n    const handleGoogleLogin = ()=> {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n    // let clase = \"animate__animated animate__fadeInLeftBig\"\r\n    \r\n    // const changeClass = () => {\r\n    //         clase = \"animate__animated animate__fadeInLeftBig\"\r\n    //         console.log(clase)\r\n    // }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"auth-container\" className= {`auth__box-container animate__animated animate__fadeInRightBig`}>\r\n\r\n            <h3 className=\"auth__title\">login</h3>\r\n            <form \r\n                onSubmit={handleLogin }\r\n                // className={ clase }\r\n            >\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n\r\n                </div>\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                    // onClick={changeClass}\r\n                >\r\n                    Create a new account\r\n                </Link>\r\n            </form>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(state => state.ui);\r\n\r\n    console.log(msgError);\r\n\r\n    const [formValues, handleInputChange] = useForm(\r\n        {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            password2: ''\r\n        }\r\n    )\r\n\r\n    const {name, email, password, password2} = formValues\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (isFormValue()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n    const isFormValue= () => {\r\n\r\n        if(name.trim().length === 0) {\r\n            dispatch(setError('Name is required'))\r\n            return false\r\n        }else if(!validator.isEmail(email)) {\r\n            dispatch(setError('Email is required'))\r\n            return false\r\n        }else if(password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'))\r\n            return false \r\n        }\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    let clase = \"animate__fadeInRightBig\"\r\n    const classChange = () => {\r\n        clase = \"animate__fadeOutRightBig\"\r\n    }\r\n    \r\n    return (\r\n\r\n            <div id=\"auth-container\" className= {`auth__box-container animate__animated ${clase}`}>\r\n\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form\r\n                onSubmit={handleRegister}\r\n            >\r\n                {\r\n                    msgError&&(\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>)\r\n                }\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={handleInputChange}\r\n\r\n                />\r\n\r\n                <button\r\n                    type=\"Submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                    onClick={classChange}\r\n                >\r\n                    Already register?\r\n                </Link>\r\n            </form>\r\n                        </div>\r\n    )\r\n}\r\n","import React from 'react'  \r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n                \r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen }\r\n                    />\r\n\r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n                    \r\n\r\n\r\n                    <Redirect to='/auth/login'/>\r\n\r\n                </Switch>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ( {id, date, title, body, url} ) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch()\r\n    const handleEntryClick= () => {\r\n            dispatch(activeNote(id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className= {\"journal__entry pointer animate__animated animate__flipInX\"}\r\n            onClick= { handleEntryClick }\r\n        >\r\n            \r\n        {\r\n            url&&\r\n            <div \r\n                className=\"journal__entry-picture\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            >\r\n            </div>\r\n        }\r\n\r\n                <div className=\"journal__body-entry\">\r\n                    <p className=\"journal__entry-title\">\r\n                        { title }\r\n                    </p>\r\n\r\n                    <p className=\"journal__entry-body\">\r\n                        { body }\r\n                    </p>\r\n\r\n                </div>\r\n\r\n                <div className=\"journal__entry-date-box\">\r\n                    <span>{noteDate.format('dddd')}</span>\r\n                    <h4>{noteDate.format('Do')}</h4>\r\n\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes } = useSelector(state => state.notes)\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        {...note}\r\n\r\n                    />   \r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { startNewNote } from '../../actions/notes'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                >\r\n\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            \r\n            <div \r\n                className= \"journal__new-entry\"\r\n                \r\n            >\r\n                <i \r\n                    className=\"far fa-calendar-plus fa-5x\"\r\n                    onClick={ handleAddNew }\r\n                >\r\n                </i>\r\n                <p className=\"mt-5\">\r\n                    New entry\r\n                </p>\r\n            </div>\r\n\r\n                <JournalEntries />\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                create entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch,  useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes'\r\n\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const { active } = useSelector(state => state.notes)\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) )\r\n    }\r\n\r\n    const handlePictureClick = ()=> {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            dispatch(startUploading(file))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de Agosto 2020</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{display: 'none'}}\r\n                onChange={ handleFileChange }\r\n            \r\n            />\r\n\r\n\r\n            <div>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= { handlePictureClick }\r\n                >\r\n                    Picture \r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save \r\n                </button>\r\n            \r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote, startDeleting } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active:note} = useSelector(state => state.notes)     \r\n    const [formValues, handleInputChange, reset] = useForm( note );\r\n    const {body, title, id} = formValues;\r\n\r\n    const activeId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current)    {\r\n            reset( note )\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset ])\r\n\r\n    useEffect(()=>{\r\n        \r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n        \r\n    },[formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome\"\r\n                    className=\"notes__title-input\"\r\n                    name= \"title\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea \r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    name= \"body\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n            {\r\n\r\n                (note.url) \r\n                && (\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src= {note.url}\r\n                            alt=\"img\"\r\n                        />\r\n                    </div>\r\n                )\r\n            \r\n            }\r\n                </div>\r\n            \r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick= {handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { useSelector } from 'react-redux'\r\nimport { animation } from '../../helpers/animation'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    return (\r\n        <div className={`journal__main-content ${animation}`  }> \r\n            <Sidebar />\r\n            <main>\r\n                {\r\n                    (active) \r\n                        ?<NoteScreen />\r\n                        :<NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}","export const animation = \"animate__animated animate__fadeIn animate__faster\"\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    localStorage.setItem('lastPath', rest.location.pathname);\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\r\n\r\nexport const LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading_background animate__fadeIn\">\r\n            <h1 className=\"loading_title\">Loading</h1>\r\n        </div>\r\n    )\r\n}\r\n","import { AuthRouter } from './AuthRouter'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { useDispatch } from 'react-redux'\r\nimport { login } from '../actions/auth'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { firebase} from '../firebase/firebase-config'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom'\r\nimport { LoadingScreen } from '../components/journal/LoadingScreen'\r\nimport { startLoadingNotes } from '../actions/notes'\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        \r\n    firebase.auth().onAuthStateChanged( async (user) => {\r\n        \r\n        if(user?.uid) {\r\n            dispatch( login(user.uid, user.displayName) )\r\n            setIsLoggedIn( true );\r\n            dispatch(startLoadingNotes(user.uid));\r\n\r\n\r\n\r\n        } else {\r\n            setIsLoggedIn( false );\r\n        }\r\n\r\n\r\n            setChecking(false);\r\n\r\n    });\r\n    \r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n    \r\n    if(checking) {\r\n        return(\r\n            <LoadingScreen />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact\r\n                        isAuthenticated={isLoggedIn}\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                        \r\n                    />\r\n\r\n                <Redirect to='/auth/login'/>\r\n\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n            case types.uiRemoveError:\r\n                return {\r\n                    ...state,\r\n                    msgError: null\r\n                }\r\n\r\n            case types.uiStartLoading: \r\n                return {\r\n                    ...state,\r\n                    loading: true\r\n                }\r\n            \r\n                case types.uiFinishLoading: \r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n                }\r\n                \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n                \r\n            }\r\n\r\n            case types.notesAddNew: \r\n                return {\r\n                    ...state,\r\n                    notes: [ action.payload, ...state.notes ]\r\n                }\r\n        \r\n        case types.notesLoad: \r\n\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }    \r\n\r\n        case types.notesUpdated: \r\n\r\n        return {\r\n            ...state,\r\n            notes: state.notes.map(\r\n                note => note.id === action.payload.id\r\n                    ? action.payload.note \r\n                    : note\r\n            )\r\n        }\r\n        \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning: \r\n            return { \r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport thunk from 'redux-thunk';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\n\r\nexport const store = createStore( \r\n    reducers, \r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n    );","import { types } from '../types/types';\r\n\r\n\r\n\r\n\r\nexport const authReducer = (state ={}, action) => {\r\n    switch ( action.type ) {\r\n        case types.login: \r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n    \r\n        case types.logout: \r\n            return { }\r\n\r\n\r\n    \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/style.scss'\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}