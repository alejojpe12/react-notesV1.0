{"ast":null,"code":"import { db } from \"../firebase/firebase-config\";\nimport { types } from '../types/types';\nimport { loadNotes } from '../helpers/loadNotes';\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const {\n      uid\n    } = getState().auth;\n    const newNote = {\n      title: '',\n      body: '',\n      date: new Date().getTime()\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n  };\n};\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note\n  }\n});\nexport const startLoadingNotes = uid => {\n  return async dispatch => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\nexport const setNotes = notes => ({\n  type: types.notesLoad,\n  payload: notes\n});\nexport const startSaveNote = note => {\n  return async (dispatch, getState) => {\n    if (!note.url) {\n      delete note.url;\n    }\n\n    const {\n      uid\n    } = getState().auth;\n    const noteToFirestore = { ...note\n    };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}journal/notes/${note.id}`).update(noteToFirestore);\n  };\n};","map":{"version":3,"sources":["/samba/Journal/src/actions/notes.js"],"names":["db","types","loadNotes","startNewNote","dispatch","getState","uid","auth","newNote","title","body","date","Date","getTime","doc","collection","add","activeNote","id","note","type","notesActive","payload","startLoadingNotes","notes","setNotes","notesLoad","startSaveNote","url","noteToFirestore","update"],"mappings":"AAAA,SAASA,EAAT,QAAmB,6BAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,SAAT,QAA0B,sBAA1B;AAIA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAO,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAEjC,UAAM;AAACC,MAAAA;AAAD,QAAQD,QAAQ,GAAGE,IAAzB;AAEA,UAAMC,OAAO,GAAG;AACZC,MAAAA,KAAK,EAAE,EADK;AAEZC,MAAAA,IAAI,EAAE,EAFM;AAGZC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAHM,KAAhB;AAMA,UAAMC,GAAG,GAAG,MAAMd,EAAE,CAACe,UAAH,CAAgB,GAAET,GAAI,gBAAtB,EAAuCU,GAAvC,CAA4CR,OAA5C,CAAlB;AAEAJ,IAAAA,QAAQ,CAAEa,UAAU,CAAEH,GAAG,CAACI,EAAN,EAAUV,OAAV,CAAZ,CAAR;AACH,GAbD;AAcH,CAfM;AAiBP,OAAO,MAAMS,UAAU,GAAG,CAAEC,EAAF,EAAMC,IAAN,MAAiB;AAEvCC,EAAAA,IAAI,EAAEnB,KAAK,CAACoB,WAF2B;AAGvCC,EAAAA,OAAO,EAAE;AACLJ,IAAAA,EADK;AAEL,OAAGC;AAFE;AAH8B,CAAjB,CAAnB;AASP,OAAO,MAAMI,iBAAiB,GAAKjB,GAAF,IAAW;AACxC,SAAO,MAAQF,QAAR,IAAsB;AACzB,UAAMoB,KAAK,GAAG,MAAMtB,SAAS,CAAEI,GAAF,CAA7B;AACAF,IAAAA,QAAQ,CAACqB,QAAQ,CAACD,KAAD,CAAT,CAAR;AAEH,GAJD;AAKH,CANM;AAUP,OAAO,MAAMC,QAAQ,GAAKD,KAAF,KAAc;AAClCJ,EAAAA,IAAI,EAAEnB,KAAK,CAACyB,SADsB;AAElCJ,EAAAA,OAAO,EAAEE;AAFyB,CAAd,CAAjB;AAMP,OAAO,MAAMG,aAAa,GAAKR,IAAF,IAAW;AACpC,SAAO,OAAMf,QAAN,EAAgBC,QAAhB,KAA6B;AAEhC,QAAI,CAACc,IAAI,CAACS,GAAV,EAAe;AACX,aAAOT,IAAI,CAACS,GAAZ;AACH;;AAED,UAAM;AAACtB,MAAAA;AAAD,QAAQD,QAAQ,GAAGE,IAAzB;AAEA,UAAMsB,eAAe,GAAI,EAAE,GAAGV;AAAL,KAAzB;AACA,WAAOU,eAAe,CAACX,EAAvB;AAEA,UAAMlB,EAAE,CAACc,GAAH,CAAQ,GAAER,GAAI,iBAAiBa,IAAI,CAACD,EAAI,EAAxC,EAA2CY,MAA3C,CAAmDD,eAAnD,CAAN;AAEH,GAbD;AAcH,CAfM","sourcesContent":["import { db } from \"../firebase/firebase-config\";\r\nimport { types } from '../types/types';\r\nimport { loadNotes } from '../helpers/loadNotes'\r\n\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const {uid} = getState().auth\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        \r\n        const doc = await db.collection( `${uid}/journal/notes`).add( newNote) \r\n\r\n        dispatch( activeNote( doc.id, newNote) );\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch(setNotes(notes));\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes \r\n});\r\n\r\n\r\nexport const startSaveNote = ( note )=> {\r\n    return async(dispatch, getState) => {\r\n\r\n        if( !note.url ){\r\n            delete note.url;\r\n        }\r\n\r\n        const {uid} = getState().auth\r\n        \r\n        const noteToFirestore =  { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}journal/notes/${ note.id }`).update( noteToFirestore );\r\n        \r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}