{"ast":null,"code":"var _jsxFileName = \"/samba/Journal/src/components/notes/NoteScreen.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { NotesAppBar } from './NotesAppBar';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { activeNote } from '../../actions/notes';\nexport const NoteScreen = () => {\n  const dispatch = useDispatch();\n  const {\n    active: note\n  } = useSelector(state => state.notes);\n  const [formValues, handleInputChange, reset] = useForm(note);\n  const {\n    body,\n    title\n  } = formValues;\n  const activeId = useRef(note.id);\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n  useEffect(() => {\n    dispatch(activeNote(formValues.id, { ...formValues\n    }));\n  }, [formValues, dispatch]);\n\n  const handleDelete = () => {// dispatch()\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes__main-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NotesAppBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Some awesome\",\n    className: \"notes__title-input\",\n    name: \"title\",\n    autoComplete: \"off\",\n    value: title,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    placeholder: \"What happened today?\",\n    className: \"notes__textarea\",\n    name: \"body\",\n    value: body,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), note.url && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notes__image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: note.url,\n    alt: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Delete\"));\n};","map":{"version":3,"sources":["/samba/Journal/src/components/notes/NoteScreen.js"],"names":["React","useEffect","useRef","NotesAppBar","useSelector","useDispatch","useForm","activeNote","NoteScreen","dispatch","active","note","state","notes","formValues","handleInputChange","reset","body","title","activeId","id","current","handleDelete","url"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAE5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM;AAACK,IAAAA,MAAM,EAACC;AAAR,MAAgBP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,KAAhB,CAAjC;AACA,QAAM,CAACC,UAAD,EAAaC,iBAAb,EAAgCC,KAAhC,IAAyCV,OAAO,CAAEK,IAAF,CAAtD;AACA,QAAM;AAACM,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBJ,UAAtB;AAEA,QAAMK,QAAQ,GAAGjB,MAAM,CAACS,IAAI,CAACS,EAAN,CAAvB;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGU,IAAI,CAACS,EAAL,KAAYD,QAAQ,CAACE,OAAxB,EAAoC;AAChCL,MAAAA,KAAK,CAAEL,IAAF,CAAL;AACAQ,MAAAA,QAAQ,CAACE,OAAT,GAAmBV,IAAI,CAACS,EAAxB;AACH;AAEJ,GANQ,EAMN,CAACT,IAAD,EAAOK,KAAP,CANM,CAAT;AAQAf,EAAAA,SAAS,CAAC,MAAI;AAEVQ,IAAAA,QAAQ,CAACF,UAAU,CAACO,UAAU,CAACM,EAAZ,EAAgB,EAAE,GAAGN;AAAL,KAAhB,CAAX,CAAR;AAEH,GAJQ,EAIP,CAACA,UAAD,EAAaL,QAAb,CAJO,CAAT;;AAMA,QAAMa,YAAY,GAAG,MAAM,CACvB;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAII;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,SAAS,EAAC,oBAHd;AAII,IAAA,IAAI,EAAE,OAJV;AAKI,IAAA,YAAY,EAAC,KALjB;AAMI,IAAA,KAAK,EAAGJ,KANZ;AAOI,IAAA,QAAQ,EAAGH,iBAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAYI;AACI,IAAA,WAAW,EAAC,sBADhB;AAEI,IAAA,SAAS,EAAC,iBAFd;AAGI,IAAA,IAAI,EAAE,MAHV;AAII,IAAA,KAAK,EAAGE,IAJZ;AAKI,IAAA,QAAQ,EAAGF,iBALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAqBKJ,IAAI,CAACY,GAAN,iBAEI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,GAAG,EAAGZ,IAAI,CAACY,GADf;AAEI,IAAA,GAAG,EAAC,KAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAvBR,CAJJ,eAsCI;AACI,IAAA,SAAS,EAAC,gBADd;AAEI,IAAA,OAAO,EAAGD,YAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtCJ,CADJ;AAiDH,CA9EM","sourcesContent":["import React, { useEffect, useRef } from 'react'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport { activeNote } from '../../actions/notes'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {active:note} = useSelector(state => state.notes)     \r\n    const [formValues, handleInputChange, reset] = useForm( note );\r\n    const {body, title} = formValues;\r\n\r\n    const activeId = useRef(note.id)\r\n\r\n    useEffect(() => {\r\n        if(note.id !== activeId.current)    {\r\n            reset( note )\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [note, reset ])\r\n\r\n    useEffect(()=>{\r\n        \r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n        \r\n    },[formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        // dispatch()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            \r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome\"\r\n                    className=\"notes__title-input\"\r\n                    name= \"title\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea \r\n                    placeholder=\"What happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    name= \"body\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n            {\r\n\r\n                (note.url) \r\n                && (\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src= {note.url}\r\n                            alt=\"img\"\r\n                        />\r\n                    </div>\r\n                )\r\n            \r\n            }\r\n                </div>\r\n            \r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick= {handleDelete}\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}